var QrRemote=QrRemote||{};QrRemote={socket:null,init:function(a){var b=this;this.disconnected=!1,this.socket=a,this.controls.init($("#controls").find(".action-elem"),this),this.status.init("#status"),this.controls.disable(),a.on("disconnect",function(){b.controls.disconnect()}),a.on("remote:attached",function(){b.controls.disconnect()}),a.on("screen:detached",function(){b.controls.disconnect()}),a.on("screen:gameOver",function(){window.location.href="/"});var c=function(){var c=$(this),d=c.parents(".controls-group");c.addClass("selected");var e=c.data("beforesend");if(e&&b.callbacks[e](c)===!1)return b.controls.enable(),!1;var f=c.data("signal")||"remote:action",g=c.data("subaction"),h=c.data("val");h="undefined"==typeof h?c.val():h,h=""+h;var i={};return i[g]=h,b.disconnected||a.emit(f,{panel:b.controls.currentMain,action:d.data("action"),command:i},function(a){if(a){var d=c.data("aftersend");d&&b.callbacks[d](c)}else b.status.update("error")}),"exit"===g};if(this.controls.container.filter(".click-trigger").on("click",c),"undefined"!=typeof Hammer){var d=0,e=200,f=$("#bat-surface"),g={prevent_default:!0};Hammer(f,g).on("touchend drag swipe",function(a){var b,g;if(!a.type.match("swipe")){if(a.type.match("touch"))g=0;else{if(b=a.gesture,d>b.timeStamp-e)return;d=b.timeStamp,g=Math.round(b.deltaY)}if(f.data("val",g),c.call(f),a.gesture){var h=a.gesture.touches[0].pageY-208;h>416&&(h=416),0>h&&(h=0),bat.style.top=h+"px"}}})}a.emit("remote:ready",function(a){a.screenAttached&&!a.remoteAttached?b.controls.enable():b.controls.disconnect()})},controls:{container:null,currentMain:null,init:function(a,b){this.container=$(a),this.context=b,this.currentMain=this.container.first().data("command")},enable:function(){this.container.removeClass("selected"),$("[data-command="+this.currentMain+"]").addClass("selected"),this.context.status.update("ready")},disable:function(){this.container.removeClass("selected"),this.context.status.update("wait")},disconnect:function(){this.container.removeClass("selected"),this.context.status.update("disconnected"),this.context.socket.disconnect(),this.context.disconnected=!0}},status:{elems:null,init:function(a){this.elems=$(a).find(".status")},update:function(a){this.elems.css("display","none").filter("."+a).css("display","inline-block")}}};